type Cart @model @auth(rules: [{allow: public}]) {
  id: ID!
  CartItems: [CartItem] @hasMany(indexName: "byCart", fields: ["id"])
  userID: ID! @index(name: "byUser")
  restaurantID: ID! @index(name: "byRestaurant")
}

type CartItem @model @auth(rules: [{allow: public}]) {
  id: ID!
  quantity: Int!
  Dish: Dish @hasOne
  cartID: ID! @index(name: "byCart")
  price: Float!
}

type Dish @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String!
  image: String!
  description: String!
  restaurantID: ID! @index(name: "byRestaurant")
  categoriess: [Categories] @manyToMany(relationName: "CategoriesDish")
  Sizes: [Sizes] @hasMany(indexName: "byDish", fields: ["id"])
}

enum OrderStatus {
  ACCEPTED
  PREPARING
  ARRIVING
  READY_FOR_PICK_UP
  COMPLETED
}

type OrderItem @model @auth(rules: [{allow: public}]) {
  id: ID!
  quantity: Int!
  orderID: ID! @index(name: "byOrder")
  Dish: Dish @hasOne
}

type Order @model @auth(rules: [{allow: public}]) {
  id: ID!
  userID: ID! @index(name: "byUser")
  Restaurant: Restaurant @hasOne
  subTotal: Int!
  total: Int!
  status: OrderStatus!
  isDelivery: Boolean
  OrderItems: [OrderItem] @hasMany(indexName: "byOrder", fields: ["id"])
}

type User @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String!
  address: String!
  lat: Float!
  lng: Float!
  Orders: [Order] @hasMany(indexName: "byUser", fields: ["id"])
  sub: String
  Carts: [Cart] @hasMany(indexName: "byUser", fields: ["id"])
}

enum SizeName {
  SMALL
  MEDIUM
  BIG
}

type Sizes @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: SizeName
  price: Float
  dishID: ID! @index(name: "byDish")
  CartItem: CartItem @hasOne
}

type Categories @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String!
  image: String!
  Dishes: [Dish] @manyToMany(relationName: "CategoriesDish")
}

type Restaurant @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String!
  image: String!
  deliveryFee: Float!
  minDeliveryTime: Float!
  maxDeliveryTime: Float!
  rating: Float
  address: String!
  lat: Float!
  lng: Float!
  Dishes: [Dish] @hasMany(indexName: "byRestaurant", fields: ["id"])
  Carts: [Cart] @hasMany(indexName: "byRestaurant", fields: ["id"])
}
 